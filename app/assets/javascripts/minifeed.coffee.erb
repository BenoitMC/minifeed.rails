@Minifeed ||= {}

Minifeed.actions =
  help: ->
    find("a[href$=keyboard-shortcuts]").click()

  close_modal: ->
    modal.close()

  previous_entry: ->
    current_entry_id = try find("#entry form").action.split("/").pop()

    if current_entry_id
      previous_entry = find("a[data-entry-id='#{current_entry_id}']").closest("li").previousSibling
      previous_entry.find("a[data-entry-id]").click() if previous_entry
    else
      find("#entries-list li:last-child a.entry-name")?.click()

  next_entry: ->
    current_entry_id = try find("#entry form").action.split("/").pop()

    if current_entry_id
      next_entry = find("a[data-entry-id='#{current_entry_id}']").closest("li").nextSibling
      next_entry.find("a[data-entry-id]").click() if next_entry
    else
      find("#entries-list li:first-child a.entry-name")?.click()

  mark_entry_as_un_read: ->
    find("#entry input[type=checkbox][name*=read]")?.click()

  mark_entry_as_un_starred: ->
    find("#entry input[type=checkbox][name*=starred]")?.click()

  open_reader_mode: ->
    find("#entry .entry-reader_link")?.click()

  open_internal: ->
    find("#entry .entry-internal_link")?.click()

  open_external: ->
    find("#entry .entry-external_link")?.click()

  reload_navigation: ->
    url = location.href + (if location.href.includes("?") then "&" else "?") + "layout=true"
    fetchText(url)
      .then (text) -> find("#header").replaceWith parseDocument(text).find("#header")

Minifeed.define_keyboard_shortcuts = ->
  <% KEYBOARD_SHORTCUTS.each do |id, keys| %>
    <% keys.each do |key| %>
      <%= "Mousetrap.bind('#{key}', Minifeed.actions.#{id})" %>
    <% end %>
  <% end %>

Minifeed.define_keyboard_shortcuts()

onEvent "click", ".entry-reader_link", (event) ->
  event.preventDefault()
  iframe = parseFragment("<iframe src='#{this.href}' class='entry-iframe' />")
  iframe.onload = -> this.style.height = this.contentDocument.querySelector("html").scrollHeight + "px"
  content = this.closest("#entry").find(".entry-content")
  content.innerHTML = ""
  content.append(iframe)

onEvent "click", ".entry-internal_link", (event) ->
  event.preventDefault()
  iframe = parseFragment("<iframe src='#{this.href}' class='entry-iframe' />")
  this.closest("#entry").find(".entry-content").innerHTML = iframe.outerHTML

onEvent "click", "#entries-load-more a", (event) ->
  event.preventDefault()
  fetchText(this.href)
    .then (text) ->
      html = parseDocument(text)
      html.findAll("#entries-list li").forEach (li) -> find("#entries-list").append(li)
      loadButton = html.find("#entries-load-more")
      find("#entries-load-more").replaceWith(loadButton || "")

onEvent "click", ".entry-body a", ->
  this.target = "_blank"

onEvent "change", "#entry > form", ->
  Rails.fire(this, "submit")

onEvent "ajax:complete", "#entry > form", (event) ->
  xhr = event.detail[0]
  html = parseDocument(xhr.responseText)
  find("#entry .entry-header").replaceWith html.find("#entry .entry-header")
  executeScriptsFrom(html)

onEvent "click", ".subnav-toggle", (event) ->
  event.preventDefault()
  this.closest(".subnav").classList.toggle("open")

onEvent "swiped-left", "#modal", Minifeed.actions.next_entry
onEvent "swiped-right", "#modal", Minifeed.actions.previous_entry
